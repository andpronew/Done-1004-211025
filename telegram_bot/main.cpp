#include <tgbot/tgbot.h>

using namespace std;
using namespace TgBot;

int main() {
    // üîë –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –æ—Ç BotFather
    string token = "????";

    Bot bot(token);

    // –û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
    bot.getEvents().onCommand("start", [&bot](const Message::Ptr& message) {
        bot.getApi().sendMessage(message->chat->id, "Hi! How are you?");
    });

    // –û—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.getEvents().onAnyMessage([&bot](const Message::Ptr& message) {
        if (StringTools::startsWith(message->text, "/")) return; // –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –∫–æ–º–∞–Ω–¥—ã
        bot.getApi().sendMessage(message->chat->id, "If you're Rityonochek, I love you! " + message->text);
    });

    try {
        printf("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...\n");
        TgLongPoll longPoll(bot);
        while (true) {
            longPoll.start();
        }
    } catch (const exception& e) {
        printf("–û—à–∏–±–∫–∞: %s\n", e.what());
    }

    return 0;
}
